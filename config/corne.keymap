/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2023 Taneli Hongisto
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NUM  1
#define SYM  2
#define NAV  3
#define FUN  4

/ {
        behaviors {
                hm: homerow_mods {
                    compatible = "zmk,behavior-hold-tap";
                    label = "HOMEROW_MODS";
                    #binding-cells = <2>;
                    tapping-term-ms = <250>;
                    quick-tap-ms = <0>;
                    flavor = "tap-preferred";
                    bindings = <&kp>, <&kp>;
                };
        };
        
        keymap {
                compatible = "zmk,keymap";

                base_layer {
                        bindings = <
    &kp ESC  &kp Q      &kp W      &kp E       &kp R        &kp T   &kp Y     &kp U        &kp I           &kp O        &kp P         &kp BSPC
    &kp TAB  &kp A      &kp S      &kp D       &kp F        &kp G   &kp H     &kp J        &kp K           &kp L        &kp SEMI      &kp SQT
    &kp CAPS &hm LGUI Z &hm LALT X &hm LCTRL C &hm LSHIFT V &kp B   &kp N     &hm RSHIFT M &hm RCTRL COMMA &hm RALT DOT &hm RGUI FSLH &kp DEL
                                          &none &mo FUN &kp SPACE   &kp ENTER &to NUM &none
                        >;
                };

                number_layer {
                        bindings = <
    &none &none       &none        &none           &none         &none       &kp KP_NUM &kp KP_N7 &kp KP_N8 &kp KP_N9 &none    &none
    &none &kp KP_PLUS &kp KP_MINUS &kp KP_MULTIPLY &kp KP_DIVIDE &kp EQUAL   &kp LPAR   &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp RPAR &to SYM
    &none &none       &none        &none           &none         &none       &none      &kp KP_N1 &kp KP_N2 &kp KP_N3 &none    &none
                                                   &none &to BASE &kp LALT   &kp KP_N0  &to NAV &none
                        >;
                };

                symbol_layer {
                        bindings = <
    &none &none &none &none    &none    &none   &none &none    &none    &none &none &none
    &none &none &none &kp LBRC &kp RBRC &none   &none &kp LPAR &kp RPAR &none &none &none
    &none &none &none &kp LT   &kp GT   &none   &none &kp LBKT &kp RBKT &none &none &none
                         &none &to BASE &none   &none &none &none
                        >;
                };

                navigation_layer {
                        bindings = <
    &none &none      &none     &none    &none    &none   &none    &none    &none  &none     &none &none
    &none &none      &none     &none    &none    &none   &kp LEFT &kp DOWN &kp UP &kp RIGHT &none &none
    &none &kp LGUI &kp LALT &kp LCTRL &kp LSHIFT &none   &none    &none    &none  &none     &none &none
                                  &none &to BASE &none   &none    &none    &none
                        >;
                };

                function_layerr {
                        bindings = <
    &none &none      &none     &none    &none    &none   &kp F12 &kp F7 &kp F8 &kp F9 &none &none
    &none &none      &none     &none    &none    &none   &kp F11 &kp F4 &kp F5 &kp F6 &none &none
    &none &kp LGUI &kp LALT &kp LCTRL &kp LSHIFT &none   &kp F10 &kp F1 &kp F2 &kp F3 &none &none
                                    &none &trans &none   &none &none &none
                        >;
                };
        };
};
