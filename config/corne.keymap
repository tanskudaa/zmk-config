/*
 * Copyright (c) 2023 Taneli Hongisto
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keys_fi.h"

// Abbreviations
#define xxx &none
#define ___ &trans

/* Key indexes for reference:
 *
 * 0  1  2  3  4  5    6  7  8  9  10 11
 * 12 13 14 15 16 17   18 19 20 21 22 23
 * 24 25 26 27 28 29   30 31 32 33 34 35
 *          36 37 38   39 40 41
 */

#define LEFT_HAND_KEYS  <0  1  2  3  4  5  12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>
#define RIGHT_HAND_KEYS <6  7  8  9  10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>

// Configuration


/ {
    behaviors {
        lh: left_hand_home_row_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;                        // Produces hold after ms
            quick-tap-ms = <150>;                           // Produces and holds tap key if pressed again in ms
            require-prior-idle-ms = <200>;                  // Disables hold presses until no key is pressed for ms
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = RIGHT_HAND_KEYS;   // Right hand only
        };
        rh: right_hand_home_row_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;                        // Produces hold after ms
            quick-tap-ms = <150>;                           // Produces and holds tap key if pressed again in ms
            require-prior-idle-ms = <200>;                  // Disables hold presses until no key is pressed for ms
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = LEFT_HAND_KEYS;    // Left hand only
        };
        ltc: layer-tap-configured {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_CONFIGURED";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;                        // Produces hold after ms
            quick-tap-ms = <150>;                           // Produces and holds tap key if pressed again in ms
            require-prior-idle-ms = <200>;                  // Disables hold presses until no key is pressed for ms
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer { // 0
            bindings = <
    /* ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮ */
        xxx         &kp Q       &kp W       &kp E       &kp R       &kp T           &kp Y       &kp U       &kp I       &kp O       &kp P       &kp A_RNG
        xxx         &lh LGUI A  &lh LALT S  &lh LCTRL D &lh LSHFT F &kp G           &kp H      &rh RSHFT J &rh RCTRL K &rh LALT L &rh RGUI O_UML &kp A_UML
        xxx         &kp Z       &kp X       &kp C       &kp V       &kp B           &kp N       &kp M       &kp COMMA   &kp DOT     &kp DASH    xxx
    /* ╰───────────┴───────────┴───────────╮                                                                           ╭───────────┴───────────┴───────────╯ */
                                            &kp ESC    &ltc 1 SPACE &kp TAB        &ltc 3 ENTER &ltc 2 BSPC &kp DEL
                                        /* ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯ */
            >;
        };

        navigation_layer { // 1
            bindings = <
    /* ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮ */
        xxx         xxx         xxx         xxx         xxx         xxx            &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 xxx        xxx
        xxx         &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHFT   xxx             &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp CAPS    xxx
        xxx         xxx         xxx         xxx         xxx         xxx             &kp HOME    &kp PGUP    &kp PGDN    &kp END     &kp INSERT  xxx
    /* ╰───────────┴───────────┴───────────╮                                                                           ╭───────────┴───────────┴───────────╯ */
                                            xxx         ___         xxx             xxx         xxx         xxx
                                        /* ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯ */
            >;
        };

        number_layer { // 2
            bindings = <
    /* ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮ */
        xxx         &kp SECT    &kp N7      &kp N8      &kp N9      &kp ACUTE       xxx         xxx         xxx         xxx         xxx         xxx
        xxx         &kp PLUS    &kp N4      &kp N5      &kp N6      &kp SQT         xxx         &kp RSHFT   &kp RCTRL   &kp RALT    &kp RGUI    xxx
        xxx         &kp LT      &kp N1      &kp N2      &kp N3      &kp UMLAU       xxx         xxx         xxx         xxx         xxx         xxx
    /* ╰───────────┴───────────┴───────────╮                                                                           ╭───────────┴───────────┴───────────╯ */
                                            &kp EURO    &kp N0      xxx             xxx         ___         xxx
                                        /* ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯ */
            >;
        };

        function_layer { // 3
            bindings = <
    /* ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮ */
        xxx         &kp F12     &kp F7      &kp F8      &kp F9      &kp PSCRN       xxx         xxx         xxx         xxx         xxx         xxx
        xxx         &kp F11     &kp F4      &kp F5      &kp F6      &kp SLCK        xxx         &kp RSHFT   &kp RCTRL   &kp LALT    &kp RGUI    xxx
        xxx         &kp F10     &kp F1      &kp F2      &kp F3      &kp PAUSE_BREAK xxx         xxx         xxx         xxx         xxx         xxx
    /* ╰───────────┴───────────┴───────────╮                                                                           ╭───────────┴───────────┴───────────╯ */
                                            xxx         xxx         xxx             ___         xxx         xxx
                                        /* ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯ */
            >;
        };
    };
};
