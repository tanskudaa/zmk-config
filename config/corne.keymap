/*
 * Copyright (c) 2023 Taneli Hongisto
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keys_fi.h"

// Layer definitions
#define L_DEF 0
#define L_NUM 1
#define L_NAV 2
#define L_SYM 3
#define L_GAME 4
#define L_GRAI 5

// Abbreviations
#define xxx &none
#define V_UP C_VOLUME_UP
#define V_DOWN C_VOLUME_DOWN
#define MUTE C_MUTE
#define PLAY C_PLAY_PAUSE
#define NEXT C_NEXT
#define PREV C_PREVIOUS

#define THUMB_CLUSTERS &game_dance &shift_caps &kp SPACE     &kp ENTER &to L_DEF xxx

// Configuration
#define TAPPING_TERM 250

&sl {
    release-after-ms = <5000>;
};

&sk {
    release-after-ms = <1000>;
    quick-release;
};

/* Key indexes:
 *
 * 0  1  2  3  4  5    6  7  8  9  10 11
 * 12 13 14 15 16 17   18 19 20 21 22 23
 * 24 25 26 27 28 29   30 31 32 33 34 35
 *          36 37 38   39 40 41
 */

/ {
    combos {
        compatible = "zmk,combos";
        combo_sym {
            timeout-ms = <TAPPING_TERM>;
            key-positions = <40 14>;
            bindings = <&sl L_SYM>;
            layers = <L_DEF L_NUM L_NAV L_SYM>;
        };
        combo_num {
            timeout-ms = <TAPPING_TERM>;
            key-positions = <40 15>;
            bindings = <&to L_NUM>;
            layers = <L_DEF L_NUM L_NAV L_SYM>;
        };
        combo_nav {
            timeout-ms = <TAPPING_TERM>;
            key-positions = <40 16>;
            bindings = <&to L_NAV>;
            layers = <L_DEF L_NUM L_NAV L_SYM>;
        };
    };

    macros {
        // Un-dead accents
        ZMK_MACRO(caret,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp F_CRET &kp SPACE>;
        )
        ZMK_MACRO(grave,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp F_GRVE &kp SPACE>;
        )
        ZMK_MACRO(tilde,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp F_TLDE &kp SPACE>;
        )
        // Vim-style nav macros
        ZMK_MACRO(word,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp RIGHT>
                , <&macro_release &kp LCTRL>
                ;
        )
        ZMK_MACRO(back,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp LEFT>
                , <&macro_release &kp LCTRL>
                ;
        )
        ZMK_MACRO(find,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp F>
                , <&macro_release &kp LCTRL>
                ;
        )
    };

    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT)>;
        };
        esc_lgui: esc_lgui {
            compatible = "zmk,behavior-mod-morph";
            label = "ESC_LGUI";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp LGUI>;
            mods = <(MOD_LSFT|MOD_LCTL|MOD_LALT)>;
            keep-mods = <(MOD_LSFT)>;
        };
        ctrl_alt: ctrl_to_alt_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "CTRL_TO_ALT_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM>;
            bindings = <&sk LCTRL>, <&sk LALT>;
        };
        alt_ctrl: alt_to_ctrl_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "ALT_TO_CTRL_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM>;
            bindings = <&sk LALT>, <&sk LCTRL>;
        };
        shift_caps: shift_caps_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM>;
            bindings = <&kp LSHIFT>, <&kp CAPS>;
        };
        game_dance: tog_gaming_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "TOG_GAMING_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM>;
            bindings = <&none>, <&none>, <&none>, <&none>, <&tog L_GAME>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    /* ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮ */
        &esc_lgui   &kp Q       &kp W       &kp E       &kp R       &kp T           &kp Y       &kp U       &kp I       &kp O       &kp P       &bspc_del
        &kp TAB     &kp A       &kp S       &kp D       &kp F       &kp G           &kp H       &kp J       &kp K       &kp L       &kp O_UML   &kp A_UML
        &ctrl_alt   &kp Z       &kp X       &kp C       &kp V       &kp B           &kp N       &kp M       &kp F_COM   &kp F_DOT   &kp F_DASH  &alt_ctrl
    /* ╰───────────┴───────────┴───────────╮                                                                           ╭───────────┴───────────┴───────────╯ */
                                                                          THUMB_CLUSTERS
                                        /* ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯ */
            >;
        };

        number_layer {
            bindings = <
    /* ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮ */
        &esc_lgui   &kp F_PLUS  &kp F_DASH  &kp F_STAR  &kp F_SLSH  &kp F_EQ        &kp F12     &kp F7      &kp F8      &kp F9      xxx         &bspc_del
        &kp F_DOT   &kp N1      &kp N2      &kp N3      &kp N4      &kp N5          &kp F11     &kp F4      &kp F5      &kp F6      xxx         xxx
        &ctrl_alt   &kp N6      &kp N7      &kp N8      &kp N9      &kp N0          &kp F10     &kp F1      &kp F2      &kp F3      xxx         &alt_ctrl
    /* ╰───────────┴───────────┴───────────╮                                                                           ╭───────────┴───────────┴───────────╯ */
                                                                          THUMB_CLUSTERS
                                        /* ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯ */
            >;
        };

        navigation_layer {
            bindings = <
    /* ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮ */
        &esc_lgui   xxx         &word       xxx         xxx         xxx             xxx         &kp PG_UP   xxx         xxx         xxx         &bspc_del
        &kp MUTE    xxx         xxx         &kp PG_DN   &find       xxx             &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   xxx         &kp PLAY
        &ctrl_alt   xxx         xxx         xxx         xxx         &back           &kp PREV    &kp V_DOWN  &kp V_UP    &kp NEXT    xxx         &alt_ctrl
    /* ╰───────────┴───────────┴───────────╮                                                                           ╭───────────┴───────────┴───────────╯ */
                                                                          THUMB_CLUSTERS
                                        /* ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯ */
            >;
        };

        symbol_layer {
            bindings = <
    /* ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮ */
        &esc_lgui   &kp F_PLUS  &kp F_DASH  &kp F_STAR  &kp F_SLSH  &kp F_EQ        &kp F_EURO  &kp F_POUN  &kp F_CURR  &caret      &grave      &bspc_del
        xxx         &kp F_EXCL  &kp F_QUES  &kp F_LBRC  &kp F_RBRC  &kp F_AT        &kp F_HASH  &kp F_LPAR  &kp F_RPAR  &kp F_AMP   &kp F_DQT   &kp F_SQT
        &ctrl_alt   &kp F_SLSH  &kp F_BSLH  &kp F_LT    &kp F_GT    &kp F_DLLR      &kp F_PRCNT &kp F_LBKT  &kp F_RBKT  &kp F_PIPE  &tilde      &alt_ctrl
    /* ╰───────────┴───────────┴───────────╮                                                                           ╭───────────┴───────────┴───────────╯ */
                                                                          THUMB_CLUSTERS
                                        /* ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯ */
            >;
        };

        gaming_layer {
            bindings = <
    /* ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮ */
        &kp ESC     &kp G       &kp Q       &kp W       &kp E       &kp R           xxx         xxx         xxx         xxx         xxx         xxx
        &kp TAB     &kp LSHIFT  &kp A       &kp S       &kp D       &kp F           xxx         xxx         xxx         xxx         xxx         xxx
        &kp T       &kp LCTRL   &kp Z       &kp X       &kp C       &kp V           xxx         xxx         xxx         xxx         xxx         xxx
    /* ╰───────────┴───────────┴───────────╮                                                                           ╭───────────┴───────────┴───────────╯ */
                                            &game_dance &mo L_GRAI  &kp SPACE       xxx         xxx         xxx
                                        /* ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯ */
            >;
        };

        gaming_raised_layer {
            bindings = <
    /* ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮   ╭───────────┬───────────┬───────────┬───────────┬───────────┬───────────╮ */
        xxx         &kp F1      &kp F2      &kp F3      &kp F4      &kp F5          xxx         xxx         xxx         xxx         xxx         xxx
        xxx         &kp N1      &kp N2      &kp N3      &kp N4      &kp N5          xxx         xxx         xxx         xxx         xxx         xxx
        xxx         &kp N6      &kp N7      &kp N8      &kp N9      &kp N0          xxx         xxx         xxx         xxx         xxx         xxx
    /* ╰───────────┴───────────┴───────────╮                                                                           ╭───────────┴───────────┴───────────╯ */
                                            xxx         &trans      xxx             xxx         xxx         xxx
                                        /* ╰───────────┴───────────┴───────────╯   ╰───────────┴───────────┴───────────╯ */
            >;
        };
    };
};
